# Azure Developer CLI configuration for Finelle UI
name: finelle-ui
metadata:
  template: finelle-react-containerapp@0.0.1-beta

# Infrastructure configuration
infra:
  provider: bicep
  path: infra
  module: main
  outputs:
    containerRegistryLoginServer: containerRegistryLoginServer
    containerRegistryName: containerRegistryName
    containerAppFQDN: containerAppFQDN
    AZURE_CONTAINER_REGISTRY_ENDPOINT: containerRegistryLoginServer
    AZURE_APPLICATION_INSIGHTS_CONNECTION_STRING: applicationInsightsConnectionString

# Services configuration
services:
  ui:
    project: .
    dist: dist
    language: js
    host: containerapp
    docker:
      path: ./Dockerfile
      context: .
      registry: ${AZURE_CONTAINER_REGISTRY_ENDPOINT}

# Hooks for deployment lifecycle
hooks:
  predeploy:
    windows:
      shell: pwsh
      run: |
        echo "Starting pre-deployment checks..."
        echo "Using direct Application Insights connection string approach..."
        
        # Use the known working connection string directly
        $connectionString = "InstrumentationKey=4422e612-5efc-4071-b1fa-3605a6b5e074;IngestionEndpoint=https://eastus2-3.in.applicationinsights.azure.com/;LiveEndpoint=https://eastus2.livediagnostics.monitor.azure.com/;ApplicationId=80180c0b-b5fe-407b-baae-1c9ef9319d09"
        echo "Connection string length: $($connectionString.Length)"
        echo "Connection string preview: $($connectionString.Substring(0, 50))..."
        
        echo "Creating .env.production file..."
        echo "VITE_APPINSIGHTS_CONNECTION_STRING=$connectionString" | Out-File -FilePath ".env.production" -Encoding utf8 -NoNewline
        
        echo "Verifying .env.production file:"
        Get-Content ".env.production" | Write-Host
        
        echo "Setting runtime environment variable..."
        $env:VITE_APPINSIGHTS_CONNECTION_STRING = $connectionString
        echo "Runtime env var length: $($env:VITE_APPINSIGHTS_CONNECTION_STRING.Length)"
        
        echo "Building React application..."
        npm run build
        
        echo "Verifying connection string is in built files..."
        $jsFiles = Get-ChildItem -Path "dist/assets" -Filter "*.js" -Recurse
        $found = $false
        foreach ($file in $jsFiles) {
          $content = Get-Content $file.FullName -Raw
          if ($content -match "InstrumentationKey") {
            echo "✅ Connection string found in $($file.Name)"
            $found = $true
            break
          }
        }
        if (-not $found) {
          echo "❌ Connection string NOT found in any JS files"
          echo "Available JS files:"
          $jsFiles | ForEach-Object { echo "  $($_.Name)" }
        }
    posix:
      shell: sh
      run: |
        echo "Starting pre-deployment checks..."
        echo "Building React application..."
        export VITE_APPINSIGHTS_CONNECTION_STRING="${applicationInsightsConnectionString}"
        npm run build
  postdeploy:
    windows:
      shell: pwsh
      run: |
        echo "Deployment completed successfully!"
        echo "Application URL: $Env:AZURE_CONTAINER_APP_URL"
        echo "Container Registry: $Env:AZURE_CONTAINER_REGISTRY_ENDPOINT"
        echo "Note: Initial deployment uses placeholder image for speed"
        echo "Custom image will be updated during azd deploy phase"
    posix:
      shell: sh
      run: |
        echo "Deployment completed successfully!"
        echo "Application URL: $AZURE_CONTAINER_APP_URL"
        echo "Container Registry: $AZURE_CONTAINER_REGISTRY_ENDPOINT"
        echo "Note: Initial deployment uses placeholder image for speed"
        echo "Custom image will be updated during azd deploy phase"
